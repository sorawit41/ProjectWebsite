<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);
header("Access-Control-Allow-Origin: *");
header("Content-Type: application/json; charset=UTF-8");
header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE');
header("Access-Control-Max-Age: 3600");
header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");

include '../DbConnect.php';
require_once '../utiles.php';
$objDb = new DbConnect;
$conn = $objDb->connect();

$method = $_SERVER['REQUEST_METHOD'];
// $target_dir = "../../assets/locations/";
$target_dir = "../assets/collection/"; //video
$target_file_thumbnail = $target_dir . 'thumbnail/';

//armset
//arms
//armSetID


$title = $_POST["title"];
$description = $_POST["description"];
// $price = $_POST["price"];
$backgroupGroupID = $_POST["backgroupGroupID"];
// arm_sets id,collectionID,title,description,photo
//collection
//collection_photo
//collectionphoto
//collection_equipment
//collectionequipment
//package_service
//packageservice
// products
//animal_service
//animalservice
if (!empty($_FILES["fileToUpload"]["name"])) {
    $file = $_FILES['fileToUpload'];
    $ext = pathinfo($file['name'], PATHINFO_EXTENSION);
    $photo = time() . '_' . randomPassword() . '.' . $ext;
    upload_image($target_dir, $target_file_thumbnail, $file, $photo, 0.5, 0.3);
    // arm_sets id,collectionID,title,description,photo
    $sql = "INSERT INTO collection_background(title,description,photo,backgroupGroupID) ";
    $sql .= " VALUES(?,?,?,?)";
    // $sql .= " ,picture) ";

    $stmt = $conn->prepare($sql);

    if ($stmt->execute([$title, $description, $photo, $backgroupGroupID])) {
        $response = ['status' => 1, 'message' => 'Record created successfully.'];
    } else {
        $response = ['status' => 0, 'message' => 'Failed to create record.'];
    }
    echo json_encode($response);
} else {
    // arm_sets id,collectionID,title,description,photo
    $sql = "INSERT INTO collection_background(title,description,backgroupGroupID) ";
    $sql .= " VALUES(?,?,?)";
    $stmt = $conn->prepare($sql);

    if ($stmt->execute([$title, $description, $backgroupGroupID])) {
        $response = ['status' => 1, 'message' => 'Record created successfully.'];
    } else {
        $response = ['status' => 0, 'message' => 'Failed to create record.'];
    }
    echo json_encode($response);

}
?>

---------------------
<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);
header("Access-Control-Allow-Origin: *");
header("Content-Type: application/json; charset=UTF-8");
header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE');
header("Access-Control-Max-Age: 3600");
header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");

include '../DbConnect.php';
$objDb = new DbConnect;
$conn = $objDb->connect();

$method = $_SERVER['REQUEST_METHOD'];
// advert id,title,description,companyTypeID,photo,proviceID,created_at
$sql = "DELETE FROM collection_background WHERE id = ?";
$path = explode('/', $_SERVER['REQUEST_URI']);


$stmt = $conn->prepare($sql);
// $stmt->bindParam(':id', $path[3]);

if ($stmt->execute([$path[4]])) {
    $response = ['status' => 1, 'message' => 'Record deleted successfully.'];
} else {
    $response = ['status' => 0, 'message' => 'Failed to delete record.'];
}
echo json_encode($response);
?>
----------------
<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);
header("Access-Control-Allow-Origin: *");
header("Content-Type: application/json; charset=UTF-8");
header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE');
header("Access-Control-Max-Age: 3600");
header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");

include '../DbConnect.php';
require_once '../utiles.php';
$objDb = new DbConnect;
$conn = $objDb->connect();

$method = $_SERVER['REQUEST_METHOD'];
// $target_dir = "../../assets/locations/";
$target_dir = "../assets/collection/"; //video
$target_file_thumbnail = $target_dir . 'thumbnail/';

$id = $_POST["id"];
$title = $_POST["title"];
$description = $_POST["description"];

// $price = $_POST["price"];
$backgroupGroupID = $_POST["backgroupGroupID"];

// arm_sets id,collectionID,title,description,photo

if (!empty($_FILES["fileToUpload"]["name"])) {
    $file = $_FILES['fileToUpload'];
    $ext = pathinfo($file['name'], PATHINFO_EXTENSION);
    $photo = time() . '_' . randomPassword() . '.' . $ext;
    upload_image($target_dir, $target_file_thumbnail, $file, $photo, 0.5, 0.3);
    // advert id,title,description,companyTypeID,photo,proviceID,created_at
    $sql = "UPDATE collection_background SET title=?,description=?,photo=?,backgroupGroupID=? ";
    $sql .= "  WHERE id=?";
    $stmt = $conn->prepare($sql);

    if ($stmt->execute([$title, $description, $photo, $backgroupGroupID, $id])) {
        $response = ['status' => 1, 'message' => 'Record created successfully.'];
    } else {
        $response = ['status' => 0, 'message' => 'Failed to create record.'];
    }
    echo json_encode($response);
} else {
    // advert id,title,description,companyTypeID,photo,proviceID,created_at
    $sql = "UPDATE collection_background SET title=?,description=?,backgroupGroupID=? ";
    $sql .= "  WHERE id=?";
    $stmt = $conn->prepare($sql);

    if ($stmt->execute([$title, $description, $backgroupGroupID, $id])) {
        $response = ['status' => 1, 'message' => 'Record created successfully.'];
    } else {
        $response = ['status' => 0, 'message' => 'Failed to create record.'];
    }
    echo json_encode($response);

}
?>
----------------------------
<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);
header("Access-Control-Allow-Origin: *");
header("Content-Type: application/json; charset=UTF-8");
header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE');
header("Access-Control-Max-Age: 3600");
header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");

include '../DbConnect.php';
$objDb = new DbConnect;
$conn = $objDb->connect();

$method = $_SERVER['REQUEST_METHOD'];

$path = explode('/', $_SERVER['REQUEST_URI']);

//driver
$sql = "SELECT * FROM collection_background ORDER BY id ASC";
$stmt = $conn->prepare($sql);

// $stmt->execute();
$stmt->execute();
$row_count = $stmt->rowCount();
if ($row_count > 0) {
    http_response_code(200);
    $response = $stmt->fetchAll(PDO::FETCH_ASSOC);
} else {
    http_response_code(202);
    $response = [];
}
echo json_encode($response);

?>
====================
<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);
header("Access-Control-Allow-Origin: *");
header("Content-Type: application/json; charset=UTF-8");
header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE');
header("Access-Control-Max-Age: 3600");
header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");

include '../DbConnect.php';
require_once '../utiles.php';
$objDb = new DbConnect;
$conn = $objDb->connect();

$method = $_SERVER['REQUEST_METHOD'];
// $target_dir = "../../assets/locations/";
$target_dir = "../assets/collection/"; //video
$target_file_thumbnail = $target_dir . 'thumbnail/';

$title = $_POST["title"];
$description = $_POST["description"];
//collection
//collection_photo
//collectionphoto
//company_owner
//companyowner

if (!empty($_FILES["fileToUpload"]["name"])) {
    $file = $_FILES['fileToUpload'];
    $ext = pathinfo($file['name'], PATHINFO_EXTENSION);
    $photo = time() . '_' . randomPassword() . '.' . $ext;
    upload_image($target_dir, $target_file_thumbnail, $file, $photo, 0.5, 0.3);
    // advert id,title,description,companyTypeID,photo,proviceID,created_at
    $sql = "INSERT INTO background_group(title,description,photo) ";
    $sql .= " VALUES(?,?,?)";
    // $sql .= " ,picture) ";

    $stmt = $conn->prepare($sql);

    if ($stmt->execute([$title, $description, $photo])) {
        $response = ['status' => 1, 'message' => 'Record created successfully.'];
    } else {
        $response = ['status' => 0, 'message' => 'Failed to create record.'];
    }
    echo json_encode($response);
} else {
    // advert id,title,description,companyTypeID,photo,proviceID,created_at
    $sql = "INSERT INTO background_group(title,description) ";
    $sql .= " VALUES(?,?)";
    $stmt = $conn->prepare($sql);

    if ($stmt->execute([$title, $description])) {
        $response = ['status' => 1, 'message' => 'Record created successfully.'];
    } else {
        $response = ['status' => 0, 'message' => 'Failed to create record.'];
    }
    echo json_encode($response);

}
?>
------------------------------------
<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);
header("Access-Control-Allow-Origin: *");
header("Content-Type: application/json; charset=UTF-8");
header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE');
header("Access-Control-Max-Age: 3600");
header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");

include '../DbConnect.php';
$objDb = new DbConnect;
$conn = $objDb->connect();

$method = $_SERVER['REQUEST_METHOD'];
// advert id,title,description,companyTypeID,photo,proviceID,created_at
$sql = "DELETE FROM background_group WHERE id = ?";
$path = explode('/', $_SERVER['REQUEST_URI']);


$stmt = $conn->prepare($sql);
// $stmt->bindParam(':id', $path[3]);

if ($stmt->execute([$path[4]])) {
    $response = ['status' => 1, 'message' => 'Record deleted successfully.'];
} else {
    $response = ['status' => 0, 'message' => 'Failed to delete record.'];
}
echo json_encode($response);
?>
---------------------------

<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);
header("Access-Control-Allow-Origin: *");
header("Content-Type: application/json; charset=UTF-8");
header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE');
header("Access-Control-Max-Age: 3600");
header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");

include '../DbConnect.php';
require_once '../utiles.php';
$objDb = new DbConnect;
$conn = $objDb->connect();

$method = $_SERVER['REQUEST_METHOD'];
// $target_dir = "../../assets/locations/";
$target_dir = "../assets/collection/"; //video
$target_file_thumbnail = $target_dir . 'thumbnail/';

$id = $_POST["id"];
$title = $_POST["title"];
$description = $_POST["description"];


if (!empty($_FILES["fileToUpload"]["name"])) {
    $file = $_FILES['fileToUpload'];
    $ext = pathinfo($file['name'], PATHINFO_EXTENSION);
    $photo = time() . '_' . randomPassword() . '.' . $ext;
    upload_image($target_dir, $target_file_thumbnail, $file, $photo, 0.5, 0.3);
    // advert id,title,description,companyTypeID,photo,proviceID,created_at
    $sql = "UPDATE background_group SET title=?,description=?,photo=? ";
    $sql .= "  WHERE id=?";
    $stmt = $conn->prepare($sql);

    if ($stmt->execute([$title, $description, $photo, $id])) {
        $response = ['status' => 1, 'message' => 'Record created successfully.'];
    } else {
        $response = ['status' => 0, 'message' => 'Failed to create record.'];
    }
    echo json_encode($response);
} else {
    // advert id,title,description,companyTypeID,photo,proviceID,created_at
    $sql = "UPDATE background_group SET title=?,description=?";
    $sql .= "  WHERE id=?";
    $stmt = $conn->prepare($sql);

    if ($stmt->execute([$title, $description, $id])) {
        $response = ['status' => 1, 'message' => 'Record created successfully.'];
    } else {
        $response = ['status' => 0, 'message' => 'Failed to create record.'];
    }
    echo json_encode($response);

}
?>
-------------------------------
+++++++++++++++ utiles.php ++++++++++++++++++++++++
<?php
    function imageResize($targetWidth,$targetHeight,$imageResourceId,$width,$height) {

        $targetLayer=imagecreatetruecolor($targetWidth,$targetHeight);
        imagecopyresampled($targetLayer,$imageResourceId,0,0,0,0,$targetWidth,$targetHeight, $width,$height);

        return $targetLayer;
    }

/*     public function getImageResized($image, int $newWidth, int $newHeight) {
        $newImg = imagecreatetruecolor($newWidth, $newHeight);     
        imagealphablending($newImg, false);
        imagesavealpha($newImg, true);
        $transparent = imagecolorallocatealpha($newImg, 255, 255, 255, 127);
        imagefilledrectangle($newImg, 0, 0, $newWidth, $newHeight, $transparent);
        $src_w = imagesx($image);
        $src_h = imagesy($image);
        imagecopyresampled($newImg, $image, 0, 0, 0, 0, $newWidth, $newHeight, $src_w, $src_h);
        return $newImg;
    } */

    function getImageResized($targetWidth,$targetHeight,$imageResourceId,$width,$height) {
        //$image, int $newWidth, int $newHeight

        $newImg=imagecreatetruecolor($targetWidth,$targetHeight);
        imagealphablending($newImg, false);
        imagesavealpha($newImg, true);
        $transparent = imagecolorallocatealpha($newImg, 255, 255, 255, 127);
        imagefilledrectangle($newImg, 0, 0, $targetWidth,$targetHeight, $transparent);

        imagecopyresampled($newImg,$imageResourceId,0,0,0,0,$targetWidth,$targetHeight, $width,$height);

        return $newImg;

    }

    function upload_image($path,$path_thumbnail,$filename,$fileNewName,$perc,$thumbnail_perc){

        if(is_array($_FILES)) {
            
            $file = $filename['tmp_name']; 
            $sourceProperties = getimagesize($file);
            $imageType = $sourceProperties[2];

            list($width, $height, $type) = getimagesize($file);
            $rwidth = ceil($width * $perc);
            $rheight = ceil($height * $perc);
            $tbrwidth = ceil($width * $thumbnail_perc);
            $tbrheight = ceil($height * $thumbnail_perc);

            switch ($imageType) {
                case IMAGETYPE_PNG:
/*                     $imageResourceId = imagecreatefrompng($file); // $img = imagecreatefrompng($file); 
                    $targetLayer = imageResize($rwidth,$rheight,$imageResourceId,$sourceProperties[0],$sourceProperties[1]);
                    $targetLayer_thumbnail = imageResize($tbrwidth,$tbrheight,$imageResourceId,$sourceProperties[0],$sourceProperties[1]);
                    imagepng($targetLayer,$path . basename($fileNewName));
                    imagepng($targetLayer_thumbnail,$path_thumbnail . basename($fileNewName));
                    break; */

                    $imageResourceId = imagecreatefrompng($file); // $img = imagecreatefrompng($file); 

                    $targetLayer = getImageResized($rwidth,$rheight,$imageResourceId,$sourceProperties[0],$sourceProperties[1]);
                    $targetLayer_thumbnail = getImageResized($tbrwidth,$tbrheight,$imageResourceId,$sourceProperties[0],$sourceProperties[1]);
                    imagepng($targetLayer,$path . basename($fileNewName));
                    imagepng($targetLayer_thumbnail,$path_thumbnail . basename($fileNewName));
                    break;


                case IMAGETYPE_GIF:
                    $imageResourceId = imagecreatefromgif($file); 
                    $targetLayer = imageResize($rwidth,$rheight,$imageResourceId,$sourceProperties[0],$sourceProperties[1]);
                    $targetLayer_thumbnail = imageResize($tbrwidth,$tbrheight,$imageResourceId,$sourceProperties[0],$sourceProperties[1]);
                    imagegif($targetLayer,$path . basename($fileNewName));
                    imagegif($targetLayer_thumbnail,$path_thumbnail . basename($fileNewName));
                    break;

                case IMAGETYPE_JPEG:
                    $imageResourceId = imagecreatefromjpeg($file); 
                    $targetLayer = imageResize($rwidth,$rheight,$imageResourceId,$sourceProperties[0],$sourceProperties[1]);
                    $targetLayer_thumbnail = imageResize($tbrwidth,$tbrheight,$imageResourceId,$sourceProperties[0],$sourceProperties[1]);
                    imagejpeg($targetLayer,$path . basename($fileNewName));
                    imagejpeg($targetLayer_thumbnail,$path_thumbnail . basename($fileNewName));
                    break;

                default:
                    // echo "Invalid Image type.";
                    exit;
                    break;
            }

            // move_uploaded_file($file, $folderPath. $fileNewName. ".". $ext);
            // move_uploaded_file($file, $folderPath. basename($fileNewName));
            // echo "Image Resize Successfully.";
        }
    }
?>
----------------------------------

<IfModule mod_rewrite.c>
  RewriteEngine On
  RewriteBase /
  RewriteRule ^index\.html$ - [L]
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteCond %{REQUEST_FILENAME} !-l
  RewriteRule . /index.html [L]
</IfModule>

---------------------
<IfModule mod_rewrite.c>
  RewriteEngine On
  RewriteBase /
  RewriteRule ^index\.html$ - [L]
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteCond %{REQUEST_FILENAME} !-l
  RewriteRule . /index.html [L]
</IfModule>

.htaccess

----------------------------------