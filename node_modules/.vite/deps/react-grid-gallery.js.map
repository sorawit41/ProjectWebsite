{
  "version": 3,
  "sources": ["../../react-grid-gallery/node_modules/react/cjs/react-jsx-runtime.production.min.js", "../../react-grid-gallery/node_modules/react/jsx-runtime.js", "../../react-grid-gallery/src/styles.ts", "../../react-grid-gallery/src/CheckButton.tsx", "../../react-grid-gallery/src/Image.tsx", "../../react-grid-gallery/src/useContainerWidth.ts", "../../react-grid-gallery/src/buildLayout.ts", "../../react-grid-gallery/src/Gallery.tsx"],
  "sourcesContent": ["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n", "import { CSSProperties } from \"react\";\nimport {\n  ImageExtended,\n  StyleFunction,\n  StyleFunctionContext,\n  StyleProp,\n} from \"./types\";\n\nexport const getStyle = (\n  styleProp: StyleProp | undefined,\n  fallback: StyleFunction,\n  context: StyleFunctionContext\n): CSSProperties => {\n  if (typeof styleProp === \"function\") {\n    return styleProp(context);\n  }\n  if (typeof styleProp === \"object\") {\n    return styleProp;\n  }\n  return fallback(context);\n};\n\nconst rotationTransformMap: Record<number, string> = {\n  3: \"rotate(180deg)\",\n  2: \"rotateY(180deg)\",\n  4: \"rotate(180deg) rotateY(180deg)\",\n  5: \"rotate(270deg) rotateY(180deg)\",\n  6: \"rotate(90deg)\",\n  7: \"rotate(90deg) rotateY(180deg)\",\n  8: \"rotate(270deg)\",\n};\n\nconst SELECTION_MARGIN = 16;\n\nexport const gallery: CSSProperties = {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n};\n\nexport const thumbnail = ({ item }: { item: ImageExtended }): CSSProperties => {\n  const rotationTransformValue = rotationTransformMap[item.orientation];\n\n  const style = {\n    cursor: \"pointer\",\n    maxWidth: \"none\",\n    width: item.scaledWidth,\n    height: item.scaledHeight,\n    marginLeft: item.marginLeft,\n    marginTop: 0,\n    transform: rotationTransformValue,\n  };\n\n  if (item.isSelected) {\n    const ratio = item.scaledWidth / item.scaledHeight;\n    const viewportHeight = item.scaledHeight - SELECTION_MARGIN * 2;\n    const viewportWidth = item.viewportWidth - SELECTION_MARGIN * 2;\n\n    let height, width;\n    if (item.scaledWidth > item.scaledHeight) {\n      width = item.scaledWidth - SELECTION_MARGIN * 2;\n      height = Math.floor(width / ratio);\n    } else {\n      height = item.scaledHeight - SELECTION_MARGIN * 2;\n      width = Math.floor(height * ratio);\n    }\n\n    const marginTop = Math.abs(Math.floor((viewportHeight - height) / 2));\n    const marginLeft = Math.abs(Math.floor((viewportWidth - width) / 2));\n\n    style.width = width;\n    style.height = height;\n    style.marginLeft = marginLeft === 0 ? 0 : -marginLeft;\n    style.marginTop = marginTop === 0 ? 0 : -marginTop;\n  }\n\n  return style;\n};\n\nexport const tileViewport = ({\n  item,\n}: {\n  item: ImageExtended;\n}): CSSProperties => {\n  const styles: CSSProperties = {\n    width: item.viewportWidth,\n    height: item.scaledHeight,\n    overflow: \"hidden\",\n  };\n  if (item.nano) {\n    styles.background = `url(${item.nano})`;\n    styles.backgroundSize = \"cover\";\n    styles.backgroundPosition = \"center center\";\n  }\n  if (item.isSelected) {\n    styles.width = item.viewportWidth - SELECTION_MARGIN * 2;\n    styles.height = item.scaledHeight - SELECTION_MARGIN * 2;\n    styles.margin = SELECTION_MARGIN;\n  }\n  return styles;\n};\n\nexport const customOverlay = ({\n  hover,\n}: {\n  hover: boolean;\n}): CSSProperties => ({\n  pointerEvents: \"none\",\n  opacity: hover ? 1 : 0,\n  position: \"absolute\",\n  height: \"100%\",\n  width: \"100%\",\n});\n\nexport const galleryItem = ({ margin }: { margin: number }): CSSProperties => ({\n  margin,\n  WebkitUserSelect: \"none\",\n  position: \"relative\",\n  background: \"#eee\",\n  padding: \"0px\",\n});\n\nexport const tileOverlay = ({\n  showOverlay,\n}: {\n  showOverlay: boolean;\n}): CSSProperties => ({\n  pointerEvents: \"none\",\n  opacity: 1,\n  position: \"absolute\",\n  height: \"100%\",\n  width: \"100%\",\n  background: showOverlay\n    ? \"linear-gradient(to bottom,rgba(0,0,0,0.26),transparent 56px,transparent)\"\n    : \"none\",\n});\n\nexport const tileIconBar: CSSProperties = {\n  pointerEvents: \"none\",\n  opacity: 1,\n  position: \"absolute\",\n  height: \"36px\",\n  width: \"100%\",\n};\n\nexport const tileDescription: CSSProperties = {\n  background: \"white\",\n  width: \"100%\",\n  margin: 0,\n  userSelect: \"text\",\n  WebkitUserSelect: \"text\",\n  MozUserSelect: \"text\",\n  overflow: \"hidden\",\n};\n\nexport const bottomBar: CSSProperties = {\n  padding: \"2px\",\n  pointerEvents: \"none\",\n  position: \"absolute\",\n  minHeight: \"0px\",\n  maxHeight: \"160px\",\n  width: \"100%\",\n  bottom: \"0px\",\n  overflow: \"hidden\",\n};\n\nexport const tagItemBlock: CSSProperties = {\n  display: \"inline-block\",\n  cursor: \"pointer\",\n  pointerEvents: \"visible\",\n  margin: \"2px\",\n};\n\nexport const tagItem = (): CSSProperties => ({\n  display: \"inline\",\n  padding: \".2em .6em .3em\",\n  fontSize: \"75%\",\n  fontWeight: \"600\",\n  lineHeight: \"1\",\n  color: \"yellow\",\n  background: \"rgba(0,0,0,0.65)\",\n  textAlign: \"center\",\n  whiteSpace: \"nowrap\",\n  verticalAlign: \"baseline\",\n  borderRadius: \".25em\",\n});\n\nexport const checkButton = ({\n  isVisible,\n}: {\n  isVisible: boolean;\n}): CSSProperties => ({\n  visibility: isVisible ? \"visible\" : \"hidden\",\n  background: \"none\",\n  float: \"left\",\n  width: 36,\n  height: 36,\n  border: \"none\",\n  padding: 6,\n  cursor: \"pointer\",\n  pointerEvents: \"visible\",\n});\n", "import { useState } from \"react\";\nimport * as styles from \"./styles\";\nimport { CheckButtonProps } from \"./types\";\n\nexport const CheckButton = ({\n  isSelected = false,\n  isVisible = true,\n  onClick,\n  color = \"#FFFFFFB2\",\n  selectedColor = \"#4285F4FF\",\n  hoverColor = \"#FFFFFFFF\",\n}: CheckButtonProps): JSX.Element => {\n  const [hover, setHover] = useState(false);\n\n  const circleStyle = { display: isSelected ? \"block\" : \"none\" };\n  const fillColor = isSelected ? selectedColor : hover ? hoverColor : color;\n\n  const handleMouseOver = () => setHover(true);\n  const handleMouseOut = () => setHover(false);\n\n  return (\n    <div\n      data-testid=\"grid-gallery-item_check-button\"\n      title=\"Select\"\n      style={styles.checkButton({ isVisible })}\n      onClick={onClick}\n      onMouseOver={handleMouseOver}\n      onMouseOut={handleMouseOut}\n    >\n      <svg\n        fill={fillColor}\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <radialGradient\n          id=\"shadow\"\n          cx=\"38\"\n          cy=\"95.488\"\n          r=\"10.488\"\n          gradientTransform=\"matrix(1 0 0 -1 -26 109)\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop offset=\".832\" stopColor=\"#010101\"></stop>\n          <stop offset=\"1\" stopColor=\"#010101\" stopOpacity=\"0\"></stop>\n        </radialGradient>\n\n        <circle\n          style={circleStyle}\n          opacity=\".26\"\n          fill=\"url(#shadow)\"\n          cx=\"12\"\n          cy=\"13.512\"\n          r=\"10.488\"\n        />\n        <circle style={circleStyle} fill=\"#FFF\" cx=\"12\" cy=\"12.2\" r=\"8.292\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n      </svg>\n    </div>\n  );\n};\n", "import { useState, MouseEvent } from \"react\";\nimport { CheckButton } from \"./CheckButton\";\nimport { ImageExtended, ImageProps } from \"./types\";\nimport * as styles from \"./styles\";\nimport { getStyle } from \"./styles\";\n\nexport const Image = <T extends ImageExtended>({\n  item,\n  thumbnailImageComponent: ThumbnailImageComponent,\n  isSelectable = true,\n  thumbnailStyle,\n  tagStyle,\n  tileViewportStyle,\n  margin,\n  index,\n  onSelect,\n  onClick,\n}: ImageProps<T>): JSX.Element => {\n  const styleContext = { item };\n\n  const [hover, setHover] = useState(false);\n\n  const thumbnailProps = {\n    key: index,\n    \"data-testid\": \"grid-gallery-item_thumbnail\",\n    src: item.src,\n    alt: item.alt ? item.alt : \"\",\n    title: typeof item.caption === \"string\" ? item.caption : null,\n    style: getStyle(thumbnailStyle, styles.thumbnail, styleContext),\n  };\n\n  const handleCheckButtonClick = (event: MouseEvent<HTMLElement>) => {\n    if (!isSelectable) {\n      return;\n    }\n    onSelect(index, event);\n  };\n\n  const handleViewportClick = (event: MouseEvent<HTMLElement>) => {\n    onClick(index, event);\n  };\n\n  const thumbnailImageProps = {\n    item,\n    index,\n    margin,\n    onSelect,\n    onClick,\n    isSelectable,\n    tileViewportStyle,\n    thumbnailStyle,\n    tagStyle,\n  };\n\n  return (\n    <div\n      className=\"ReactGridGallery_tile\"\n      data-testid=\"grid-gallery-item\"\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n      style={styles.galleryItem({ margin })}\n    >\n      <div\n        className=\"ReactGridGallery_tile-icon-bar\"\n        style={styles.tileIconBar}\n      >\n        <CheckButton\n          isSelected={item.isSelected}\n          isVisible={item.isSelected || (isSelectable && hover)}\n          onClick={handleCheckButtonClick}\n        />\n      </div>\n\n      {!!item.tags && (\n        <div\n          className=\"ReactGridGallery_tile-bottom-bar\"\n          style={styles.bottomBar}\n        >\n          {item.tags.map((tag, index) => (\n            <div\n              key={tag.key || index}\n              title={tag.title}\n              style={styles.tagItemBlock}\n            >\n              <span style={getStyle(tagStyle, styles.tagItem, styleContext)}>\n                {tag.value}\n              </span>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {!!item.customOverlay && (\n        <div\n          className=\"ReactGridGallery_custom-overlay\"\n          style={styles.customOverlay({ hover })}\n        >\n          {item.customOverlay}\n        </div>\n      )}\n\n      <div\n        className=\"ReactGridGallery_tile-overlay\"\n        style={styles.tileOverlay({\n          showOverlay: hover && !item.isSelected && isSelectable,\n        })}\n      />\n\n      <div\n        className=\"ReactGridGallery_tile-viewport\"\n        data-testid=\"grid-gallery-item_viewport\"\n        style={getStyle(tileViewportStyle, styles.tileViewport, styleContext)}\n        onClick={handleViewportClick}\n      >\n        {ThumbnailImageComponent ? (\n          <ThumbnailImageComponent\n            {...thumbnailImageProps}\n            imageProps={thumbnailProps}\n          />\n        ) : (\n          <img {...thumbnailProps} />\n        )}\n      </div>\n      {item.thumbnailCaption && (\n        <div\n          className=\"ReactGridGallery_tile-description\"\n          style={styles.tileDescription}\n        >\n          {item.thumbnailCaption}\n        </div>\n      )}\n    </div>\n  );\n};\n", "import { useRef, useCallback, useState } from \"react\";\n\nexport function useContainerWidth(defaultContainerWidth: number) {\n  const ref = useRef<HTMLElement | null>(null);\n  const observerRef = useRef<ResizeObserver>();\n\n  const [containerWidth, setContainerWidth] = useState(defaultContainerWidth);\n\n  const containerRef = useCallback((node: HTMLElement | null) => {\n    observerRef.current?.disconnect();\n    observerRef.current = undefined;\n\n    ref.current = node;\n\n    const updateWidth = () => {\n      if (!ref.current) {\n        return;\n      }\n      let width = ref.current.clientWidth;\n      try {\n        width = ref.current.getBoundingClientRect().width;\n      } catch (err) {}\n      setContainerWidth(Math.floor(width));\n    };\n\n    updateWidth();\n\n    if (node && typeof ResizeObserver !== \"undefined\") {\n      observerRef.current = new ResizeObserver(updateWidth);\n      observerRef.current.observe(node);\n    }\n  }, []);\n\n  return { containerRef, containerWidth };\n}\n", "import {\n  ImageExtended,\n  Image,\n  BuildLayoutOptions,\n  ImageExtendedRow,\n} from \"./types\";\n\nconst calculateCutOff = <T extends ImageExtended = ImageExtended>(\n  items: T[],\n  totalRowWidth: number,\n  protrudingWidth: number\n) => {\n  const cutOff: number[] = [];\n  let cutSum = 0;\n  for (let i in items) {\n    const item = items[i];\n    const fractionOfWidth = item.scaledWidth / totalRowWidth;\n    cutOff[i] = Math.floor(fractionOfWidth * protrudingWidth);\n    cutSum += cutOff[i];\n  }\n\n  let stillToCutOff = protrudingWidth - cutSum;\n  while (stillToCutOff > 0) {\n    for (let i in cutOff) {\n      cutOff[i]++;\n      stillToCutOff--;\n      if (stillToCutOff < 0) break;\n    }\n  }\n  return cutOff;\n};\n\nconst getRow = <T extends Image = Image>(\n  images: T[],\n  { containerWidth, rowHeight, margin }: BuildLayoutOptions\n): [ImageExtendedRow<T>, T[]] => {\n  const row: ImageExtendedRow<T> = [];\n  const imgMargin = 2 * margin;\n  const items = [...images];\n\n  let totalRowWidth = 0;\n  while (items.length > 0 && totalRowWidth < containerWidth) {\n    const item = items.shift();\n    const scaledWidth = Math.floor(rowHeight * (item.width / item.height));\n    const extendedItem: ImageExtended<T> = {\n      ...item,\n      scaledHeight: rowHeight,\n      scaledWidth,\n      viewportWidth: scaledWidth,\n      marginLeft: 0,\n    };\n    row.push(extendedItem);\n    totalRowWidth += extendedItem.scaledWidth + imgMargin;\n  }\n\n  const protrudingWidth = totalRowWidth - containerWidth;\n  if (row.length > 0 && protrudingWidth > 0) {\n    const cutoff = calculateCutOff(row, totalRowWidth, protrudingWidth);\n    for (const i in row) {\n      const pixelsToRemove = cutoff[i];\n      const item = row[i];\n      item.marginLeft = -Math.abs(Math.floor(pixelsToRemove / 2));\n      item.viewportWidth = item.scaledWidth - pixelsToRemove;\n    }\n  }\n\n  return [row, items];\n};\n\nconst getRows = <T extends Image = Image>(\n  images: T[],\n  options: BuildLayoutOptions,\n  rows: ImageExtendedRow<T>[] = []\n): ImageExtendedRow<T>[] => {\n  const [row, imagesLeft] = getRow(images, options);\n  const nextRows = [...rows, row];\n\n  if (options.maxRows && nextRows.length >= options.maxRows) {\n    return nextRows;\n  }\n  if (imagesLeft.length) {\n    return getRows(imagesLeft, options, nextRows);\n  }\n  return nextRows;\n};\n\nexport const buildLayout = <T extends Image = Image>(\n  images: T[],\n  { containerWidth, maxRows, rowHeight, margin }: BuildLayoutOptions\n): ImageExtendedRow<T>[] => {\n  rowHeight = typeof rowHeight === \"undefined\" ? 180 : rowHeight;\n  margin = typeof margin === \"undefined\" ? 2 : margin;\n\n  if (!images) return [];\n  if (!containerWidth) return [];\n\n  const options = { containerWidth, maxRows, rowHeight, margin };\n  return getRows(images, options);\n};\n\nexport const buildLayoutFlat = <T extends Image = Image>(\n  images: T[],\n  options: BuildLayoutOptions\n): ImageExtendedRow<T> => {\n  const rows = buildLayout(images, options);\n  return [].concat.apply([], rows);\n};\n", "import { MouseEvent } from \"react\";\nimport { Image } from \"./Image\";\nimport { useContainerWidth } from \"./useContainerWidth\";\nimport { buildLayoutFlat } from \"./buildLayout\";\nimport { Image as ImageInterface, GalleryProps } from \"./types\";\nimport * as styles from \"./styles\";\n\nexport const Gallery = <T extends ImageInterface>({\n  images,\n  id = \"ReactGridGallery\",\n  enableImageSelection = true,\n  onSelect = () => {},\n  rowHeight = 180,\n  maxRows,\n  margin = 2,\n  defaultContainerWidth = 0,\n  onClick = () => {},\n  tileViewportStyle,\n  thumbnailStyle,\n  tagStyle,\n  thumbnailImageComponent,\n}: GalleryProps<T>): JSX.Element => {\n  const { containerRef, containerWidth } = useContainerWidth(\n    defaultContainerWidth\n  );\n\n  const thumbnails = buildLayoutFlat<T>(images, {\n    containerWidth,\n    maxRows,\n    rowHeight,\n    margin,\n  });\n\n  const handleSelect = (index: number, event: MouseEvent<HTMLElement>) => {\n    event.preventDefault();\n    onSelect(index, images[index], event);\n  };\n\n  const handleClick = (index: number, event: MouseEvent<HTMLElement>) => {\n    onClick(index, images[index], event);\n  };\n\n  return (\n    <div id={id} className=\"ReactGridGallery\" ref={containerRef}>\n      <div style={styles.gallery}>\n        {thumbnails.map((item, index) => (\n          <Image\n            key={item.key || index}\n            item={item}\n            index={index}\n            margin={margin}\n            height={rowHeight}\n            isSelectable={enableImageSelection}\n            onClick={handleClick}\n            onSelect={handleSelect}\n            tagStyle={tagStyle}\n            tileViewportStyle={tileViewportStyle}\n            thumbnailStyle={thumbnailStyle}\n            thumbnailImageComponent={thumbnailImageComponent}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nGallery.displayName = \"Gallery\";\n"],
  "mappings": "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",
  "names": ["require$$0", "jsxRuntimeModule", "useState", "_jsx", "styles.checkButton", "_jsxs", "styles.thumbnail", "styles.galleryItem", "styles.tileIconBar", "styles.bottomBar", "index", "styles.tagItemBlock", "styles.tagItem", "styles.customOverlay", "styles.tileOverlay", "styles.tileViewport", "styles.tileDescription", "useRef", "useCallback", "_a", "styles.gallery"]
}
